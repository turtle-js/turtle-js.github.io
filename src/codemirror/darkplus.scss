/*
 * Name:       darkplus
 * Author: joker876 (https://github.com/joker876)
*/
//general
$white-half-opaque: #ffffff80;
$selection: #0084ff40;
//token colors
$purple: #c586c0;
$almost-white: #d4d4d4;
$aqua: #98d7f8;
$pistachio: #4ec990;
$lightblue: #569cd6;
$lightgreen: #b5cea8;
$blue: #82aaff;
$orange: #ce834a;
$lightred: #d16969;
$green: #6a9955;
$yellow: #dcdcaa;

.cm-s-darkplus.CodeMirror {
    --bg-color: #202124;
    background-color: var(--bg-color);
    color: white;
}

.cm-s-darkplus .CodeMirror-gutters {
    background: var(--bg-color);
    color: #858585;
    border: none;
}

.cm-s-darkplus .CodeMirror-guttermarker,
.cm-s-darkplus .CodeMirror-guttermarker-subtle,
.cm-s-darkplus .CodeMirror-linenumber {
    color: #fff8;
}

.cm-s-darkplus .CodeMirror-activeline {

    .CodeMirror-guttermarker,
    .CodeMirror-guttermarker-subtle,
    .CodeMirror-linenumber {
        color: #fffd;
    }
}

.cm-s-darkplus .CodeMirror-cursor {
    border-left: 1px solid $white-half-opaque;
}

.cm-s-darkplus.cm-fat-cursor .CodeMirror-cursor {
    background-color: $white-half-opaque !important;
}

.cm-s-darkplus .cm-animate-fat-cursor {
    background-color: $white-half-opaque !important;
}

.cm-s-darkplus div.CodeMirror-selected {
    background: $selection;
    border-radius: 3px;
}

.cm-s-darkplus.CodeMirror-focused div.CodeMirror-selected {
    background: $selection;
    border-radius: 3px;
}

.cm-s-darkplus .CodeMirror-line::selection,
.cm-s-darkplus .CodeMirror-line>span::selection,
.cm-s-darkplus .CodeMirror-line>span>span::selection {
    background: $selection;
    border-radius: 3px;
}

.cm-s-darkplus .CodeMirror-line::-moz-selection,
.cm-s-darkplus .CodeMirror-line>span::-moz-selection,
.cm-s-darkplus .CodeMirror-line>span>span::-moz-selection {
    background: $selection;
    border-radius: 3px;
}

.cm-s-darkplus .CodeMirror-activeline-background {
    border: 1px solid #fff1;
    background: #ffffff03;
    transform: translateY(1px);
}

// import, let, export, if, while, etc.
.cm-s-darkplus .cm-keyword {
    color: $purple;
}

// =, +, -, *, etc.
.cm-s-darkplus .cm-operator {
    color: $almost-white;
}

// variable inside a function
.cm-s-darkplus .cm-variable-2 {
    color: $blue;
}

//? this is something unknown to me and likely a typescript type
.cm-s-darkplus .cm-variable-3,
.cm-s-darkplus .cm-type {
    color: $pistachio;
}

// false, true, null, undefined, etc.
.cm-s-darkplus .cm-atom {
    color: $lightblue;
}

//number
.cm-s-darkplus .cm-number {
    color: $lightgreen;
}

//definition of a new variable
.cm-s-darkplus .cm-def {
    color: $blue;
}

//string
.cm-s-darkplus .cm-string {
    color: $orange;
}

//regex
.cm-s-darkplus .cm-string-2 {
    color: $lightred;
}

//comment
.cm-s-darkplus .cm-comment {
    color: $green;
}

//variable after it was defined
.cm-s-darkplus .cm-variable {
    color: $blue;
}

//property of an object
.cm-s-darkplus .cm-property {
    color: $aqua;
}


.cm-s-darkplus .cm-error {
    color: rgba(255, 255, 255, 1.0);
    text-decoration: wavy;
}


.cm-s-darkplus .CodeMirror-matchingbracket {
    color: #FFCB6B !important;
    position: relative;

    &::after {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        top: 0;
        border: 1px solid #fff5;
    }
}

.cm-s-darkplus .CodeMirror-nonmatchingbracket {
    color: #f14c4c !important;
}
